
第六章 虚拟存储器
    6.1  虚拟存储器的基本概念
    6.2  请求页式存储管理方式
    6.3 页面置换算法
    6.4  请求分页系统的性能分析
    6.5  请求分段存储管理方式
返回<<
　6．1  虚拟存储器的基本概念

1．虚拟存储器的引入：

⑴虚拟存储器的设想（基本原理）：当成需要运行时，不是讲它的全部信息装入主存，而是将其中一部分装入主存，另外一部分暂时留在辅存中，程序运行到不在主存的信息时再设法将它们装入主存，保证程序的正常运行。

⑵局部性原理

①程序中有些部分是彼此互斥的，不是每次运行时都能执行到；

②程序执行的时间局部性

③程序执行的空间局部性

⑶虚拟存储器的定义

2．虚拟存储器的实现方式：

   ⑴分页请求系统

   ⑵请求分段系统

3．虚拟存储器的特征：

 离散性、多次性、对换性、虚拟性

4．实现虚拟存储器必须解决的问题：

5．虚拟存储器并非无限大，限制条件有

⑴外部存储器大小

⑵指令中地址场长度的限制

6．2  请求页式存储管理方式

1．请求分页中的硬件支持

⑴页表机制

⑵缺页中断机构

⑶地址变换机构

2．页面分配

⑴最小物理块数

⑵页面分配和置换策略

①固定分配局部置换

②可变分配全局置换

③可变分配局部置换

⑶分配算法

①平均分配算法

②按比例分配算法

③考虑优先权的分配算法

3．页面调入策略

⑴何时调入页面

  预掉页策略、请求调页策略

⑵从何调入页面

⑶页面调入过程

6．3  页面置换算法

  抖动现象

1．最佳置换算法（理想置换算法）

  ⑴算法：淘汰永不使用的或是在最长时间内不再被访问的页

  ⑵无实现价值，作为其它算法的衡量标准

2．先进现出置换算法：

  ⑴算法：淘汰最先进出主存的页

  ⑵性能差、有异常现象（belady现象）

   举例：设进程有5页，访问顺序：1，2，3，4，1，2，5，1，2，3，4，5，分3块主存块和4块主存块时。

3．最近最久未使用（LRU）算法

  ⑴算法：淘汰最近最久未使用的页

  ⑵硬件支持（实现方法）

寄存器、栈

  ⑶特点：软件实现：系统“非生产性”开销过大；

          硬件实现：增大成本

4．Clock置换算法（LRU算法的近似实现）

　⑴简单的Clock置换算法

  ⑵改进型Clock置换算法

5．最少使用（LFU）置换算法

   淘汰最近使用次数最少的页

6．页面缓冲置换算法

6．4  请求分页系统的性能分析

1．缺页中断率对有效访问时间的影响

影响缺页中断率的因素：

  分配给程序的主存块数；

  页面的大小；

  程序本身的编制方法；

  页面置换算法。

2．工作集

3．抖动产生的原因和预防方法

  ⑴抖动产生的原因

  ⑵抖动的预防

①采取局部置换策略

②在CPU调度程序中引入工作集算法

③L=S准则

④挂起若干进程

6．5  请求分段存储管理方式

1．请求分段中的硬件支持

  ⑴段表机制

  ⑵缺段中断机构

  ⑶地址变换机构

2．分段共享与保护

  ⑴共享段

共享进程计数、存取控制字段、段号

  ⑵共享段的分配与回收

  ⑶分段保护

    越界检查、存取控制检查、环保护机构

返回<<
